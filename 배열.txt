push() : 뒤에 삽입
pop() : 뒤에 삭제
unshift() : 앞에 삽입
shift() : 앞에 삭제

a.splice(n, m) : 특정 요소 삭제. n번째 인덱스부터 m개를 지워라
a.splice(n, m, x) : n번째 인덱스부터 m개를 지우고 x를 추가. m에 0을 넣으면 아무것도 삭제하지 않고 요소 추가 가능
a.splice() : 삭제된 요소 반환

a.slice(n, m) : n번째 인덱스부터 m번째 인덱스 바로 앞 요소까지 반환. 문자열의 slice와 같다.
                괄호 안에 아무것도 넣지 않으면 a라는 배열을 복사한다.
a.concat(arr, arr2) : 인자로 받은 배열 또는 값을 합쳐서 새로운 배열로 반환
a.forEach((요소, 인덱스, 배열명)=>{}) : 배열 반복. 함수를 인수로 받는다.
a.indexOf() : 해당 요소의 인덱스 반환. 없으면 -1 반환. 두 번째 인자는 해당 인덱스부터 검색하라는 의미.
a.lastIndexOf() : 끝에서부터 검색
a.includes() : 해당 요소 포함 여부
a.find(function) : 첫 번째 true값만 반환하고 끝남. 없으면 undefined 반환
a.findIndex(function) : 해당 인덱스 반환하고 끝남. 없으면 -1 반환
a.filter(function) : 조건을 만족하는 모든 요소 반환.
a.reverse : 역순으로 재정렬
a.map(function) :  함수를 인자로 받아 특정 기능을 수행하고 새로운 배열 반환
a.join() : 배열을 합쳐서 문자열 만들기. 괄호 안에 아무것도 넣지 않으면 기본적으로 ,가 들어간다.
a.split() : join과 반대로 문자열을 배열로 만들어 준다. 괄호 안에 있는 것을 기준으로 배열로 만든다. 
            괄호 안이 비어 있으면 문자열을 통으로 하나의 요소로 만들며, ("") 이렇게 할 경우 음절 및 공백 단위로 하나씩 요소로 만든다.
Array.isArray() : 배열인지 아닌지 확인. JS에서는 배열도 객체로 인식해서 typeof를 써도 배열 또한 Object로 나온다.
